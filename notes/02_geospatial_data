---------------------------------------------------------
CHAPTER 2 - LEARNING GEOSPATIAL DATA
---------------------------------------------------------

- Common Data Formats

    - Until 2004, geospatial data was difficult to acquire and desktop processing power was limited.
        Preprocessing data was a requirement for any geospatial project.

      In 2004, Google released Google Maps, which upended the industry.  Other major players 
        released major advances this year also, including Microsoft (TerraServer), the OGC
        (Web Map Service), and Esri (ArcGIS 9).  These innovations were driven by Google Maps'
        map-tiling model, called 'slippy maps', which allowed for smooth, global, scrolling maps.


    - People had used map servers on the internet before Google Maps (MapQuest most notably), but
        they offered small amounts of data at a time over limited areas.  AJAX was the advance
        that made Google Maps so responsive and scalable.

      Also, Google Maps' JavaScript API made it possible for programmers to combine maps with data from 
        other sources to create mashups.


    - 'OpenLayers' is a standard for distributed geospatial layers.  It has now gone beyond Google's
        original API to offer additional features.

      'OpenStreetMap' is an open source answer to the tiled map services consumed by systems such as
        OpenLayers.  It has global, street-level vector data and other spacial features that have been
        collected from available governement data and many volunteers.  The data is maintained in a 
        Wiki-like fashion.


    - For many years, geospatial data was very difficult to obtain, and tools were used by governments
        or very large organizations only.  Web mapping has changed everything in the industry, and now
        anyone can build geospatial tools.


    - Another benefit of the web era is that data providers began distributing data in a common projection
        called 'Mercator'.  It's the same standard nautical navigation projection that was used 400 years ago.
        The Google variation is called 'Google Mercator'.  

      Mercator distorts the size of objects according to their distance from the equator.  It does preserve
        angles, which allows for plotting a course.

      Google also standardized on the 'WGS 84' datum, which defines a specific spherical model of the Earth
        called a 'geoid'.  This model defines the normal sea level.  Note that GPS also uses this model, so
        Google Maps is easily compatible with raw GIS data.


    - There are 2 primary categories under which most geospatial datasets can be grouped.

        1. Vector Data = Any format that minimally represents geolocation data using points, lines, or
                           polygons

        2. Raster Data = Any format that stores data in a grid of rows and columns.  Raster data includes all
                           image formats.



- Common Traits of Data Structures

    - There are 2 common factors in all geospatial data:

        1. Geolocation Data 

        2. Subject Information



- Understanding Spatial Indexing

    - Geospatial datasets are often very large files, easily reaching hundreds of MBs or even several
        GBs.  This can cause geospatial software to be quite slow in trying to do analysis.  Spatial indexes
        are created to mitigate this problem.

      The 'Quadtree Index' and 'R-tree Index' are the 2 most common spatial indexing algorithms.


    - Quadtree Index Algorithm

        A Quadtree is a tree in which each tree contains 4 children.  Each square is subdivided into 4 smaller
          squares.  When a node contains a specified number of features and more features are added, the node
          splits.

        Quadtree indexes are most commonly found in file-based index formats.


    - R-tree Index Algorithm

        R-tree indexes are more sophisticated than Quadtrees.  They are designed to handle 3D data and are
          optimized to store the index in a way that is compatible with the way databases use memory and
          disk space.

        Overlapping rectangles create bounding boxes for data. 


    - Grids

        Spatial indexes also often employ the concept of an integer grid.  Geospatial coordinates are
          usually floating point number with 2-16 decimal places.  However, integer comparisons are much
          cheaper than floating point comparisons.

        Most spatial indexing algorithms map floating-point coordinates to an integer grid to speed up 
          comparisons.

        Grid sizes can be as small as 256 x 256 for smaller file formats or can be as large as 
          3 million x 3 million in large geospatial databases.

        The technique used is very similar to the rendering technique we used in 'SimpleGIS' to convert
          latitude and longitude to screen pixels.



- Overviews

    - Overview data is most commonly found in raster formats.  'Overviews' are resampled and lower-resolution
        versions of raster datasets that provide thumbnail views or simply faster-loading image views at
        different map scales.  They are aka 'pyramids', and the process of creating them is known as
        'pyramiding an image'.

      These overviews are usually preprocessed and stored with the full resolution data either embedded with
        the file or in a separate file.


    - The trade off is that the file size will become larger, but image viewing is sped up.  Vector data also
        has the concept of overviews, but is less important since vector data is easily scalable.



- Metadata

    - Metadata is any data that describes the associated dataset.  Common metadata includes the footprint of 
        the dataset, the projection used, and information describing how the dataset was created.


    - There are several common metadata formats, including:

        FDGC (Federal Geographic Data Committee)
        CSDGM (Content Standard for Digital Geospatial Metadata)
        INSPIRE (Infrastructure for Spatial Information in the European Community)



- File Structure

    - These elements can be stored in a variety of ways in a single file, multiple files, or databases, depending
        on the format.  It can be stored in a variety of formats, including embedded binary headers, XML, CSV,
        database tables, separate text, or binary files.  


    - Human-readable files like XML or CSV are easily inspected.  For binary files, the Python 'struct' module
        lets you read and write binary data as strings.

      The 'struct' module uses the '>' (big endian) and '<' (little endian) symbols to specify byte order.


        # Here we open an Esri shapefile and get basic information
        # The bounding box is stored in 4 bytes starting at byte 36
        >>> import struct

        >>> f = open('hancock.shp', 'rb')
        >>> f.seek(36)

        # Get min longitude, min latitude, max longitude, min latitude
        >>> struct.unpack("<d", f.read(8)) 
        (-89.6904544701547,) 
        >>> struct.unpack("<d", f.read(8)) 
        (30.173943486533133,) 
        >>> struct.unpack("<d", f.read(8)) 
        (-89.32227546981174,) 
        >>> struct.unpack("<d", f.read(8)) 
        (30.6483914869749,)

        # Get all 4 at once instead
        >>> struct.unpack("<dddd", f.read(32))



- Widely Used Vector Data Types

    - Vector data is by far the most common geospatial format because it is the most efficient way to store spatial 
        information.  It requires much fewer resources to store and process than raster data.

      The OGC has 16+ formats for vector data.  Vector data stores only geographic primitives, including points, 
        lines, and polygons.  Only the points are stored for each type of shape.


    - Geospatial vector data is similar to the concept of vector computer graphic.  Vector data contains Earth-based
        coordinates, while vector data typically stores screen coordinates.  Geospatial data is also usually
        linked to other information about the object, such as timestamps.  Also, geospatial systems have a much 
        similar geometry than graphics systems.



- Shapefiles

    - The Esri 'shapefile' is the most ubiquitious geospatial format.  Esri released it as an open format in 1998.
        It was originally designed for its lower-end package (ArcInfo) to complement its higher-end package (ARC/INFO).


    - The format is so common that many analysts get by just learning this format and ignoring all the other ones.
        Most other formats can be converted back and forth to shapefiles.  Virtually any geospatial software supports
        the format.


    - Python modules that can be used to work with shapefiles include 'osgeo', 'shapely', and 'fiona'.


    - Confusingly, a shapefile actually consists of multiple (3-15) separate files:

        .shp
        This is the shapefile. It contains the geometry.
        It is a required file. Some software that needs only geometry will accept the .shp files without the .shx or 
          .dbf file.

        .shx
        This is the shape index file. It is a fixed-sized record index referencing geometry for faster access.
        It is a required file. This file is meaningless without the .shp file.

        .dbf
        This is the database file. It contains the geometry attributes.
        It is a required file. Some software will access this format without the .shp file present as the specification 
          predates shapefiles. It's based on the very old FoxPro and dBase formats. An open specification exists for it 
          called Xbase. The .dbf files can be opened by most types of spreadsheet software.

        .sbn
        This is the spatial bin file, that is, the shapefile spatial index.
        It contains bounding boxes of features mapped to a 256 x 256 integer grid. It is very common for this file to 
          accompany large shapefile datasets.

        .sbx
        A fixed-sized record index for the .sbn file.
        A traditional ordered record index of a spatial index. Frequently seen.

        .prj
        This contains map projection information that's stored in a well-known text format.
        A very common and required file for on-the-fly projection by the GIS software. This same format can also accompany 
          raster data.

        .fbn
        A spatial index of read-only features.
        Very rarely seen.

        .fbx
        A fixed-sized record index of the .fbn spatial index.
        Very rarely seen.

        .ixs
        A geocoding index.
        Common in geocoding applications, including driving-direction type applications.

        .mxs
        Another type of geocoding index.
        Less common than the .ixs format.

        .ain
        Attribute index.
        Mostly legacy format, and rarely used in modern software.

        .aih
        Attribute index.
        Accompanies the .ain files.

        .qix
        Quadtree index.
        A spatial index format created by the open source community because the Esri .sbn and .sbx files were undocumented 
          until recently.

        .atx
        Attribute index.
        A more recent Esri software-specific attribute index to speed up attribute queries.

        .shp.xml
        Metadata.
        A geospatial metadata .xml container. It can be any of the multiple XML standards, including FGDC and ISO.

        .cpg
        Code page file for .dbf.
        It is used for the internationalization of .dbf files.



- CAD Files

    - CAD software is used for everything engineering-related, from bicycles and cars to parks and sewer systems.
        Merging geospatial data with CAD data is sometimes done in civil engineering, and it can be tricky.
        It's usually better to ask the CAD team if they can export to shapefile first.


    - There are 2 primary CAD formats:

        DXF (Drawing Exchange Format)
        DWG (AutoCAD's Drawing Format)


    - CAD software has advanced features not usually included in geospatial software:

        Curves
        Surfaces
        3D Solids
        Text Styling
        Viewport Configuration



- Tag-Based and Markup-Based Formats

    - Tag-Based Format 

        WKT (Well-Known Text) = used for projection information and exchange formats

        Here is an example:

          GEOGCS["WGS 84", 
              DATUM["WGS_1984", 
                  SPHEROID["WGS 84",6378137,298.257223563, 
                      AUTHORITY["EPSG","7030"]], 
                  AUTHORITY["EPSG","6326"]], 
              PRIMEM["Greenwich",0, 
                  AUTHORITY["EPSG","8901"]], 
              UNIT["degree",0.01745329251994328, 
                  AUTHORITY["EPSG","9122"]], 
              AUTHORITY["EPSG","4326"]]


    - XML Formats

        KML (Keyhole Markup Language)
        OSM (OpenStreetMap)
        GPX (Garmin's exchange format)

        
    - GML (OGC's Geographic Markup Language) is the basis for OGC's WFS (Web Feature Service), which is a standard
        for web applications.

      However, GML has been largely superseded by KML and the GeoJSON format.


    - This is a KML sample:

        <?xml version="1.0" encoding="utf-8"?> 
        <kml xmlns="http://www.opengis.net/kml/2.2"> 
          <Placemark> 
            <name>Mockingbird Cafe</name> 
            <description>Coffee Shop</description> 
            <Point> 
              <coordinates>-89.329160,30.310964</coordinates> 
            </Point> 
          </Placemark> 
        </kml> 


    - SVG (Scalable Vector Graphics) is a widely supported XML format for computer graphics.  It is supported by 
        most browsers and is often used for geospatial rendering.  However, it was not designed as a geographic
        format.



- GeoJSON

    - GeoJSON is a relatively new text format based on JSON.  It can be found in all major geographic
        software systems and websites.  This is because it's easy to feed the JSON directly into 
        JavaScript code.


    - Here is an example:

        { "type": "GeometryCollection", 
          "geometries": [ 
            { "type": "Point", 
              "coordinates": [-89.33, 30.0] 
            }, 
            { "type": "LineString", 
              "coordinates": [ [-89.33, 30.30], [-89.36, 30.28] ] 
            } 
          {"type": "Polygon", 
            "coordinates": [[ 
              [-104.05, 48.99], 
              [-97.22,  48.98] 
            } 
          ] 
        }


    - Note that this example is both valid JavaScript and valid Python, which makes it easy to work
        with on both sides.



- GeoPackage

    - The 'GeoPackage' format is defined by OGC as a type of geodatabase which uses SQLite.  It's an 
        attempt to get away from issues with proprietary or limited data formats.



- Widely Used Raster Data Types

    - Raster data consists of rows and columns of cells or pixels.  Raster data is thought of as
        image data, but can also be stored as 'ASCII' or 'BLOB'.


    - Regular image data expresses resolution as dpi or the total number of pixels.  Geospatial data is 
        usually defined by the ground distance each cell represents.  


    - Raster datasets may contain multiple bands, meaning that different wavelengths of light can be
        collected at the same time over the same area.  There are often 3-7 bands, but there are sometimes
        others.  Bands can be displayed separately or combined into a single band.


    - The field of scientific computing commonly uses raster data.  It shares many elements with geospatial
        remote sensing, but add some twists.  Oceanography and meterology are the most common applications
        of this data.  Complex raster formats such as 'NetCDF', 'GRIB', and 'HDF5' are used.


    - The open source 'raster' library, known as GDAL (Geospatial Data Abstraction Library), supports 130+
        raster formats.  It includes the vector 'OGR' library mentioned previously.



- TIFF Files

    - The TIFF (Tagged Image File Format) is the most common geospatial raster format.  The TIFF format's 
        flexible tagging system allows it to store any type of data in a single file.  They can contain
        overview images, multiple bands, integer elevation data, metadata, internal compression, and a variety
        of other things.


    - Since there is no standardization, TIFF files tend to have portability problems.  The 'GeoTIFF' extension
        was created to define a common geospatial standard.  Geospatial rasters mith have '.tiff', '.tif', or
        '.gtif' file extensions.



- JPEG, GIF, BMP, and PNG

    - JPEG, GIF, and PNG are image files used in web applications.

      BMP images are commonly used for desktop applications.



- Compressed Formats

    - Since geospatial rasters tend to be very large, they are often stored using advanced compression techniques.


    - For JPEGs, the 'JPEG 2000' format is a common compression standard.  The 'MrSID' and 'ECW' proprietary
        wavelet compression formats are also seen in geospatial software.


    - The TIFF supports algorithms including LZW (Lempel-Ziv-Welch).  Note that compressed information is suitable
        as part of a basemap, but should not be used for remote-sensing processing, since it is lossy.



- ASCII Grids

    - Another means of storing raster data, often elevation data, is in ASCII Grid files.  This file format was
        created by Esri, but has become an unofficial open standard.


    - Here is an example:

        <NCOLS xxx> 
        <NROWS xxx> 
        <XLLCENTER xxx | XLLCORNER xxx> 
        <YLLCENTER xxx | YLLCORNER xxx> 
        <CELLSIZE xxx> 
        {NODATA_VALUE xxx} 
        row 1 
        row 2 
        . 
        . 
        . 
        row n 


    - Although it's not the most efficient way to store data, ASCII Grid files are very popular because they
        don't require any special libraries to read or write.



- World Files

    - World files are simple text files that can provide geospatial referencing information to any image 
        externally for files formats that don't have native spatial support.  
 

    - World files have the 'jgw', 'tfw', 'bpw', 'pgw', or 'gfw' extension.



- Point Cloud Data

    - Point cloud data is any data collected as the (x, y, z) location of a surface point based on some sort
        of focused energy return.  This can be created using lasers, radar waves, acoustic soundings, or other
        waveform generating devices.  

      The spacing between points is arbitrary and is dependent on the type and position of the sensor.


    - We are mostly concerned with radar and LIDAR data.  Radar point cloud data is typically collected on 
        space missions, while LIDAR is typically collected by terrestrial or airborne vehicles.


    - LIDAR

        - LIDAR (Light Radar) uses powerful laser range-finding systems to model the world with very high 
            precision.  LIDAR sensors can be mounted on satellites, airplanes, or vehicles.  


        - The most common data format for LIDAR data is the LAS (LIDAR Exchange Format).



- Web Services

    - Geospatial web services allow users to perform data discovery, data visualization, and data access
        across the web.  


    - The most common web protocols are:

        WMS (Web Map Service)
        WFS (Web Feature Service)

      Web services might return KML, JSON, GML, zipped shapefiles, and other formats.



- Geospatial Databases

    - A 'geodatabase' can refer to an entire category of file formats, data schemas, and software.  Here,
        we're just looking at their attributes as file formats.  

      Geodatabases store vector data in a relational database model.  Data is often stored in BLOBs using
        the WKB (Well-Known Binary) form.